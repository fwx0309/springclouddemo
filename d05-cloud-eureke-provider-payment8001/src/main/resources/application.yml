server:
  port: 8001

spring:
  application:
#    name: cloud-provider-payment8001
    name: cloud-provider-payment # 集群版
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource  # 配置数据库类型
    driver-class-name: com.mysql.cj.jdbc.Driver   # 配置驱动
    url: jdbc:mysql://localhost:3306/cloud_demo?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: 123456

eureka:
  client:
    #表示是否将自己注册进EurekaServer默认为true。
    register-with-eureka: true
    #是否从EurekaServer抓取已有的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    fetch-registry: true
    service-url:
      #defaultZone: http://localhost:7001/eureka/
      defaultZone: http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/ #集群版
  instance:
    instance-id: payment8001  # 实例名称
    prefer-ip-address: true # 访问路径可以显示ip

    # 使用8001单节点"关闭自我保护"测试，如果是集群模式，集群版需要各节点配置。这里对应测试的eureka服务是7001,7001上也需要做对应的配置
    # Eureka客户端向服务端发送心跳的时间间隔，单位为秒(默认是30秒)
    #lease-renewal-interval-in-seconds: 1
    #Eureka服务端在收到最后一次心跳后等待时间上限，单位为秒(默认是90秒)，超时将剔除服务
    #lease-expiration-duration-in-seconds: 2

mybatis:
  configuration:
    map-underscore-to-camel-case: true  # 开启驼峰命名自动映射
  mapper-locations: classpath:mapper/*.xml # 配置mapper.xml文件位置
  type-aliases-package: org.fwx.entities  # 别名包
